{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,SAAUC,SAASC,cAAc,uBACjCC,QAASF,SAASC,cAAc,sBAChCE,UAAWH,SAASC,cAAc,wBAClCG,UAAWJ,SAASC,cAAc,WAI9BI,GADaP,EAAKK,UAAUG,MAChBR,EAAKC,SAASO,OACdR,EAAKI,QAAQI,MAE/B,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,G,GAEpBJ,E,IAEFc,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAAzB,GAAS0B,OAAOI,QAAQ,sBAAuCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAyB3EpB,EAAKM,UAAUuB,iBAAiB,SAThC,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMC,EAAahC,EAAKK,UAAUG,OAfZ,SAACY,EAAOa,EAAMC,GAEpC,IADA,IACSC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAMhC1B,EAAc0B,EALJ,IAANA,EACUf,EAEAgB,OAAOhB,GAASgB,OAAOH,G,CAYvCI,CAFkBrC,EAAKC,SAASO,MACdR,EAAKI,QAAQI,MACOwB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delayInp: document.querySelector('input[name=\"delay\"]'),\n  stepInp: document.querySelector('input[name=\"step\"]'),\n  amountInp: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector('button'),\n};\n\nconst userAmount = refs.amountInp.value;\nconst userDelay = refs.delayInp.value;\nconst stepDelay = refs.stepInp.value;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay }); // Reject\n      }\n    }, userDelay);\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nconst promiseGenerate = (delay, step, amount) => {\n  let delayNext = 0;\n  for (let i = 1; i <= amount; i += 1) {\n    if (i === 1) {\n      delayNext = delay;\n    } else {\n      delayNext = Number(delay) + Number(step);\n    }\n    createPromise(i, delayNext);\n  }\n};\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  const userAmount = refs.amountInp.value;\n  const userDelay = refs.delayInp.value;\n  const stepDelay = refs.stepInp.value;\n  promiseGenerate(userDelay, stepDelay, userAmount);\n}\n\nrefs.submitBtn.addEventListener('click', handleSubmit);\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","delayInp","document","querySelector","stepInp","amountInp","submitBtn","$ce04d3a99e08e73b$var$userDelay","value","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","userAmount1","step","amount","i","Number","$ce04d3a99e08e73b$var$promiseGenerate"],"version":3,"file":"03-promises.c4c6f9ab.js.map"}