{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,SAAUC,SAASC,cAAc,uBACjCC,QAASF,SAASC,cAAc,sBAChCE,UAAWH,SAASC,cAAc,wBAClCG,UAAWJ,SAASC,cAAc,WAI9BI,GADaP,EAAKK,UAAUG,MAChBR,EAAKC,SAASO,OACdR,EAAKI,QAAQI,MAG/B,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,G,GAEpBJ,E,IAEFc,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEvEO,OAAM,SAACR,EAAUC,GAAWG,EAAAzB,GAAS0B,OAAOI,QAAQ,sBAAuCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAWtGpB,EAAKM,UAAUuB,iBAAiB,QAASpB,GAEzCA,EAAc,EAAG,MACdY,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBU,QAAQC,IAAI,uBAAwCL,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAE3DO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBU,QAAQC,IAAI,sBAAqCL,OAAfP,EAAS,QAAYO,OAANN,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delayInp: document.querySelector('input[name=\"delay\"]'),\n  stepInp: document.querySelector('input[name=\"step\"]'),\n  amountInp: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector('button'),\n};\n\nconst userAmount = refs.amountInp.value;\nconst userDelay = refs.delayInp.value;\nconst stepDelay = refs.stepInp.value;\nlet promiseCounter = 0;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay }); // Reject\n      }\n    }, userDelay);\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch((position, delay) => {Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\n// const intervalId = setInterval(() => {\n//   if (promiseCounter === USER_AMOUNT) {\n//     clearInterval(intervalId);\n//     return;\n//   }\n//   promiseCounter += 1;\n// }, STEP_DELAY);\nrefs.submitBtn.addEventListener('click', createPromise);\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","delayInp","document","querySelector","stepInp","amountInp","submitBtn","$ce04d3a99e08e73b$var$userDelay","value","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","console","log"],"version":3,"file":"03-promises.f3c74553.js.map"}